name: CD

on:
  push:
    branches:
      - main

jobs:
  core-test:
    if: |
      !startsWith(github.event.head_commit.message, 'chore') &&
      !startsWith(github.event.head_commit.message, 'build: hotfix') &&
      !endsWith(github.event.head_commit.message, 'reformatted by jina-dev-bot')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        group: [1, 2, 3, 4, 5, 6, 7, 8, 9]     # set to the number of end-to-end tests
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Prepare environment
        run: |
          sudo apt update && sudo apt install ffmpeg
          python -m pip install --upgrade pip
          python -m pip install wheel
          pip install --no-cache-dir ".[full,test]"
      - name: Add JCloud auth token
        run: |
          mkdir -p ~/.jina
          touch ~/.jina/config.json
          echo "{\"auth_token\": \"${WOLF_TOKEN}\"}" > ~/.jina/config.json
          echo "{\"auth_token\": \"${WOLF_TOKEN}\"}" > ~/.jina/wolf.json
          echo ~/.jina/config.json
        env:
          WOLF_TOKEN: ${{ secrets.WOLF_TOKEN }}
      - name: Test
        id: test
        run: pytest --suppress-no-test-exit-code -v -s -m "not gpu" --splits 9 --group ${{ matrix.group }} --splitting-algorithm least_duration tests/
        timeout-minutes: 35
        env:
          WOLF_TOKEN: ${{ secrets.WOLF_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          S3_SCHEMA_FOLDER_PATH: ${{ secrets.S3_SCHEMA_FOLDER_PATH }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_CUSTOM_DATA_PATH: ${{ secrets.S3_CUSTOM_DATA_PATH }}
          S3_CUSTOM_MM_DATA_PATH: ${{ secrets.S3_CUSTOM_MM_DATA_PATH }}
#      - name: Setup tmate session for debugging
#        if: ${{ failure() }}
#        uses: mxschmitt/action-tmate@v3
#        timeout-minutes: 60


  prerelease:
    runs-on: ubuntu-latest
    needs: [core-test]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Pre-release (.devN)
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          pip install twine wheel
          ./scripts/release.sh
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          JINA_SLACK_WEBHOOK: ${{ secrets.JINA_SLACK_WEBHOOK }}

  update-deployment-if-required:
    runs-on: ubuntu-latest
    needs: [core-test]
    steps:
      - uses: actions/checkout@v2
      - name: Check if deployment has changed
        uses: dorny/paths-filter@v2
        id: check_has_deployment_changed
        with:
          filters: |
            has_deployment_changed:
            - 'deployment/**'
      - name: replace now commit hash in Dockerfile
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        shell: bash
        run: sed -i 's/JINA_NOW_COMMIT_SHA/${{ github.sha }}/g' deployment/bff/Dockerfile
      - name: Zip deployment
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        run: zip -r deploy.zip deployment docker-compose.yml
      - name: Deploy to AWS Elastic Beanstalk
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: now-bff-playground
          environment_name: Nowbffplayground-env
          version_label: ${{ github.sha }}
          region: "eu-west-1"
          deployment_package: deploy.zip