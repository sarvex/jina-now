name: CI

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run the tests with tmate debugging enabled"
        required: false
        default: false

  pull_request:

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - name: find the prev warning if exist
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: "bad commit message"
      - name: Delete comment if exist
        if: ${{ steps.fc.outputs.comment-id != 0 }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.fc.outputs.comment-id }},
            })
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: 'echo "module.exports = {extends: [''@commitlint/config-conventional'']}" > commitlint.config.js'
      - uses: wagoid/commitlint-github-action@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: if lint failed
        if: ${{ failure() }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Thanks for your contribution :heart:
            :broken_heart: Unfortunately, this PR has one ore more **bad commit messages**, it can not be merged. To fix this problem, please refer to:
            - [Commit Message Guideline for the First Time Contributor](https://github.com/jina-ai/jina/issues/553)
            - [Contributing Guideline](https://github.com/jina-ai/jina/blob/master/CONTRIBUTING.md)
            Note, other CI tests will *not* *start* until the commit messages get fixed.
            This message will be deleted automatically when the commit messages get fixed.
          reaction-type: "eyes"

  lint-flake-8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude .git,__pycache__,docs/source/conf.py,old,build,dist,tests/,jina/resources/,now/thirdparty
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude .git,__pycache__,docs/source/conf.py,old,build,dist,tests/,jina/resources/,now/thirdparty

  check-black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - id: file_changes
        uses: Ana06/get-changed-files@v1.2
      - name: check black
        run: ./scripts/black.sh
        env:
          CHANGED_FILES: ${{ steps.file_changes.outputs.added_modified }}

  update-preprocessor:
    runs-on: ubuntu-latest
    needs: [lint-flake-8, check-black, commit-lint]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/push-executor
        with:
          executor_version_name: NOW_PREPROCESSOR_VERSION
          executor_name: NOWPreprocessor
          executor_path: now/executor/preprocessor
          # for some reason, the first filter condition needs a different indentation
          has_changed_filter: |
            - now/app/base/**
              - now/executor/preprocessor/**
          executor_id: 2hgojz3z
          jina_auth_token: ${{ secrets.NOW_PREPROCESSOR_JCLOUD_TOKEN }}

  update-elastic:
    runs-on: ubuntu-latest
    needs: [lint-flake-8, check-black, commit-lint]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/push-executor
        with:
          executor_version_name: NOW_ELASTIC_INDEXER_VERSION
          executor_name: NOWElasticIndexer
          executor_path: now/executor/indexer/elastic
          # for some reason, the first filter condition needs a different indentation
          has_changed_filter: |
            - now/executor/abstract/**
              - now/executor/indexer/elastic/**
          executor_id: mdtuyaaj
          jina_auth_token: ${{ secrets.NOW_STAGING_FLORIAN }}

  update-autocomplete:
    runs-on: ubuntu-latest
    needs: [lint-flake-8, check-black, commit-lint]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/push-executor
        with:
          executor_version_name: NOW_AUTOCOMPLETE_VERSION
          executor_name: NOWAutoCompleteExecutor2
          executor_path: now/executor/autocomplete
          # for some reason, the first filter condition needs a different indentation
          has_changed_filter: |
            - now/executor/autocomplete/**
          executor_id: w5w084h7
          jina_auth_token: ${{ secrets.NOW_STAGING_FLORIAN }}

  update-bff-playground:
    runs-on: ubuntu-latest
    needs: [lint-flake-8, check-black, commit-lint]
    steps:
      - uses: actions/checkout@v2
      - name: Check if deployment has changed
        uses: dorny/paths-filter@v2
        id: check_has_deployment_changed
        with:
          filters: |
            has_deployment_changed:
            - 'deployment/playground/**'
            - 'deployment/bff/**'
      - name: Get bff and playground tag
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        run: |
          FILE='now/constants.py'
          BFF_PLAYGROUND_TAG=$(sed -n '/DOCKER_BFF_PLAYGROUND_TAG =/p' $FILE | cut -d \' -f2)
          echo "BFF_PLAYGROUND_TAG=$BFF_PLAYGROUND_TAG" >> $GITHUB_ENV
      - name: Check that tag isn't used already for bff
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        env:
          IMAGE_TAG: ${{ env.BFF_PLAYGROUND_TAG }}
        run: |
          if docker manifest inspect jinaai/now-bff:$IMAGE_TAG; then
            echo "Docker tag is used already for bff. Please update bff and playground tag"
            exit 1
          else
            echo "Docker tag isn't used already for bff, continue to build..."
          fi
      - name: Check that tag isn't used already for playground
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        env:
          IMAGE_TAG: ${{ env.BFF_PLAYGROUND_TAG }}
        run: |
          if docker manifest inspect jinaai/now-playground:$IMAGE_TAG; then
            echo "Docker tag is used already for playground. Please update bff and playground tag"
            exit 1
          else
            echo "Docker tag isn't used already for playground, continue to build..."
          fi
      - name: Set up Docker Buildx
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: replace now commit hash in Dockerfile
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        shell: bash
        run: sed -i 's/JINA_NOW_COMMIT_SHA/${{ github.event.pull_request.head.sha }}/g' deployment/bff/Dockerfile
      - name: Build and push bff
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        uses: docker/build-push-action@v3
        with:
          context: deployment/bff/.
          push: true
          tags: jinaai/now-bff:${{ env.BFF_PLAYGROUND_TAG }}
      - name: Build and push playground
        if: steps.check_has_deployment_changed.outputs.has_deployment_changed == 'true'
        uses: docker/build-push-action@v3
        with:
          context: deployment/playground/.
          push: true
          tags: jinaai/now-playground:${{ env.BFF_PLAYGROUND_TAG }}

  core-test:
    runs-on: ubuntu-latest
    needs:
      [
        update-preprocessor,
        update-elastic,
        update-autocomplete,
        update-bff-playground,
      ]
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        group: [1, 2, 3, 4, 5, 6, 7, 8, 9] # set to the number of end-to-end tests + 1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Prepare environment
        run: |
          sudo apt update && sudo apt install ffmpeg
          python -m pip install --upgrade pip
          python -m pip install wheel
          pip install --no-cache-dir ".[full,test]"
      - name: Add JCloud auth token
        run: |
          mkdir -p ~/.jina
          touch ~/.jina/config.json
          echo "{\"auth_token\": \"${WOLF_TOKEN}\"}" > ~/.jina/config.json
          cat ~/.jina/config.json
        env:
          WOLF_TOKEN: ${{ secrets.WOLF_TOKEN }}
      - name: Test
        id: test
        run: |
          pytest --suppress-no-test-exit-code --cov=now -v -s -m "not gpu" --splits 9 --group ${{ matrix.group }} --splitting-algorithm least_duration tests/
        timeout-minutes: 20
        env:
          WOLF_TOKEN: ${{ secrets.WOLF_TOKEN }}
          S3_SCHEMA_FOLDER_PATH: ${{ secrets.S3_SCHEMA_FOLDER_PATH }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_CUSTOM_DATA_PATH: ${{ secrets.S3_CUSTOM_DATA_PATH }}
          S3_CUSTOM_MM_DATA_PATH: ${{ secrets.S3_CUSTOM_MM_DATA_PATH }}
#      - name: Setup tmate session for debugging
#        if: ${{ failure() || (github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled) }}
#        uses: mxschmitt/action-tmate@v3
#        timeout-minutes: 60
      - name: Upload coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage${{ matrix.group }}
          path: .coverage

  # just for blocking the merge until all parallel core-test are successful
  success-all-test-coverage:
    runs-on: ubuntu-latest
    needs: [core-test]
    if: always()
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Check Failure
        if: env.WORKFLOW_CONCLUSION == 'failure'
        run: exit 1
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Prepare environment
        run: |
          python -m pip install --upgrade pip
          pip install pytest-cov
      - name: Download all coverage artifacts
        uses: actions/download-artifact@v2
      - name: Run coverage
        run: |
          coverage combine coverage*/.coverage*
          coverage xml
      - name: Upload coverage from test to Codecov
        uses: codecov/codecov-action@v2
      - name: Success
        if: ${{ success() }}
        run: echo "All Done"